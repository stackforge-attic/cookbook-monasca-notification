kafka:
    url: <%= @hosts['kafka']['url'] %>
    group: <%= node[:monasca_notification][:group] %>
    alarm_topic: <%= @hosts['kafka']['alarm_topic'] %>
    notification_topic: <%= @hosts['kafka']['notification_topic'] %>

mysql:
    host: <%= @hosts['mysql']['url'] %>
    user: <%= @hosts['mysql']['user'] %>
    passwd: <%= @hosts['mysql']['password'] %>
    db: <%= @hosts['mysql']['database'] %>

email:
    server: <%= @hosts['smtp']['url'] %>
    port: 25
    user: <%= @hosts['smtp']['user'] %>
    password: <%= @hosts['smtp']['password'] %>
    timeout: <%= @hosts['smtp']['timeout'] %>
    from_addr: <%= @hosts['smtp']['from_addr'] %>

processors:
    alarm:
        number: 2
        ttl: 14400  # In seconds, undefined for none. Alarms older than this are not processed
    notification:
        number: 2

queues:
    alarms_size: 256
    finished_size: 256
    notifications_size: 256
    sent_notifications_size: 50  # limiting this size reduces potential # of re-sent notifications after a failure

zookeeper:
    url: <%= @hosts['zookeeper']['url'] %>
    max_offset_lag: 600  # In seconds, undefined for none

logging: # Used in logging.dictConfig
    version: 1
    disable_existing_loggers: False
    formatters:
        default:
            format: "%(asctime)s %(levelname)s %(name)s %(message)s"
    handlers:
        console:
            class: logging.StreamHandler
            formatter: default
        file:
            class: logging.handlers.RotatingFileHandler
            filename: <%= node[:monasca_notification][:log_dir] %>/notification.log
            formatter: default
            maxBytes: 10485760  # Rotate at file size ~10MB
            backupCount: 5  # Keep 5 older logs around
    loggers:
        kazoo:
            level: WARN
        kafka:
            level: WARN
        statsd:
            level: WARN
    root:
        handlers:
            - file
        level: INFO
